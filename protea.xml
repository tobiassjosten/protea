<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE muclient>
<muclient>



<!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<!-- MUSHCLIENT METADATA                                                    -->
<!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<plugin
	name="Protea"
	author="Tobias SjÃ¶sten"
	id="31fd8b9ee4f0937c4b584303"
	language="Lua"
	purpose="Viagra for your e-peen"
	save_state="y"
	date_written="2009-09-26 14:06:14"
	version="1.0"
>
	<description trim="y">Protea is a gaming enhancement system tailored for Iron Realms Entertainment MUDs.</description>
</plugin>



<!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<!-- PROTEA INTERFACE                                                       -->
<!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<script><![CDATA[

-- === === === === === === === === === === === === === === === === === === ====
-- LOAD MODULES
-- === === === === === === === === === === === === === === === === === === ====

PROTEA_PATH = GetPluginInfo(GetPluginID(), 6):gsub('protea.xml', '')
package.path = package.path .. ';' .. PROTEA_PATH .. '?.lua'

protea = require 'core.init'



-- === === === === === === === === === === === === === === === === === === ====
-- MUSHCLIENT PLUGIN CALLBACKS
-- === === === === === === === === === === === === === === === === === === ====

host2realm =
{
	['achaea.com'] = 'achaea',
	['aetolia.com'] = 'aetolia',
	['imperian.com'] = 'imperian',
	['lusternia.com'] = 'lusternia',
}

buffer = ''

function OnPluginConnect()
	buffer = ''
	local realm = host2realm[GetInfo(1)]
	if realm then
		atcp:Initialize()
		protea:Environment('realm', realm)
	end
end -- OnPluginConnect()

if not GetInfo(106) then
	local realm = host2realm[GetInfo(1)]
	if realm then
		protea:Environment('realm', realm)
		pigscanfly = true
	end
end

function OnPluginDisconnect()
	protea:EnvironmentReset()
end -- OnPluginDisconnect()

function OnPluginPacketReceived(packet)
	local packet = atcp:Parse(buffer .. packet)

	if packet:match('Password correct%. Welcome to Imperian%.') then
		pigscanfly = true
	end

	-- As long as last two characters is not a GO AHEAD, we have incomplete data
	if pigscanfly and #packet > 0 and string.sub(packet, #packet - 1) ~= '\255\249' then
		buffer = packet
		return ''
	end

	buffer = ''
	return packet
end -- OnPluginPacketReceived()

]]></script>



</muclient>
